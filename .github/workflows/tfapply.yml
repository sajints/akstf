# This is a basic workflow to help you get started with Actions

name: Apply

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true 
        type: string
      environment:
        description: 'Environment'
        type: string
        required: false 

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform-plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      working_directory: "environments/nonprod/platform"
      aksmodule_directory: "environments/nonprod/platform/modules/aks"
      nwmodule_directory: "environments/nonprod/platform/modules/network"
      k8smodule_directory: "environments/nonprod/platform/modules/k8s"
      platform_directory: "environments/nonprod/platform/modules/Platform"

    # Steps represent a sequence of tasks that will be executed as part of the job
    
    defaults:
      run:
        shell: bash
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run
        run: bash scripts/azlogin.sh
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.1.9"

      - name: Terraform Init
        run: terraform -chdir=${{ env.working_directory }} init

      - name: Terraform Apply
        run: terraform -chdir=${{ env.working_directory }} apply -auto-approve

      - name: key file
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: "./private_ssh_key"
      
      - name: Terraform Init
        run: terraform -chdir=${{ env.platform_directory }} init

      - name: Terraform Apply
        run: terraform -chdir=${{ env.platform_directory }} apply -lock=false

      # Message to say this wf completed
      - name: Run a one-line script
        run: echo Completed the flow successfully

  # k8s:
  #   needs: terraform-plan
  #   runs-on: ubuntu-latest
  #   env:
  #     working_directory: "environments/nonprod/platform"
  #     aksmodule_directory: "environments/nonprod/platform/modules/aks"
  #     nwmodule_directory: "environments/nonprod/platform/modules/network"
  #     k8smodule_directory: "environments/nonprod/platform/modules/k8s"

  #   # Steps represent a sequence of tasks that will be executed as part of the job
    
  #   defaults:
  #     run:
  #       shell: bash
    
  #   steps:

  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #         # client-id : ${{ secrets.ARM_CLIENT_ID }}
  #         # ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #         # tenant-id : ${{ secrets.ARM_TENANT_ID }}
  #         # subscription-id': ${{ secrets.ARM_SUBSCRIPTION_ID }}

  #     - name: Terraform Init for k8s
  #       run: terraform -chdir=${{ env.k8smodule_directory }} init

  #     - name: Terraform Apply for k8s
  #       run: terraform -chdir=${{ env.k8smodule_directory }} apply -auto-approve 

